{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","PerPage","currentPage","onPageChange","paginateItemsCount","Math","ceil","paginateItemsArray","makeOnPageChange","page","className","classNames","disabled","href","onClick","map","item","active","items","selectValues","App","useState","itemsPerPageValue","setItemsPerPage","setCurrentPage","firstItemOnPage","lastItemOnPage","min","length","itemsOnPage","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"mLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAqBC,KAAKC,KAAKN,EAAQC,GACvCM,EAAqBd,EAAW,EAAGW,GACnCI,EAAmB,SAACC,GAAD,OAAkB,kBAAMN,EAAaM,KAE9D,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBV,IAJhB,SAQE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAASN,EAAiBN,EAAc,GAL1C,oBAWDK,EAAmBQ,KAAI,SAACC,GAAD,OACtB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQf,IAAgBc,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAASN,EAAiBQ,GAJ5B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUV,IAAgBE,IAJhC,SAQE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAqB,OAAS,QAC7DU,QAASN,EAAiBN,EAAc,GAL1C,wBC/DFgB,G,MAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,OAEdsB,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAA6CC,mBAAS,GAAtD,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KAEMC,EAAkBH,GAAqBpB,EAAc,GAAK,EAC1DwB,EACFrB,KAAKsB,IAAIL,EAAoBpB,EAAagB,EAAMU,QAE9CC,EAAcpC,EAAWgC,EAAiBC,GAAgBX,KAAI,SAAAlB,GAAC,qBAAYA,MAMjF,OACE,sBAAKa,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACsDC,EADtD,eAC2ER,EAAMU,OADjF,OAIA,sBAAKlB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOT,EACPU,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,QANlC,SASGZ,EAAaJ,KAAI,SAACgB,GAAD,OAChB,wBAEEA,MAAOA,EAFT,SAIGA,GAHIA,UASb,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMU,OACb3B,QAASqB,EACTpB,YAAaA,EACbC,aA3Ce,SAACM,GACpBe,EAAef,MA6Cb,6BACGoB,EAAYd,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,aCpEboB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3bca4cb3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  PerPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  PerPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const paginateItemsCount = Math.ceil(total / PerPage);\n  const paginateItemsArray = getNumbers(1, paginateItemsCount);\n  const makeOnPageChange = (page: number) => () => onPageChange(page);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={makeOnPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {paginateItemsArray.map((item: number) => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === item },\n          )}\n          key={item}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${item}`}\n            onClick={makeOnPageChange(item)}\n          >\n            {item}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === paginateItemsCount,\n          },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === paginateItemsCount ? 'true' : 'false'}\n          onClick={makeOnPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst selectValues = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [itemsPerPageValue, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItemOnPage = itemsPerPageValue * (currentPage - 1) + 1;\n  const lastItemOnPage\n    = Math.min(itemsPerPageValue * currentPage, items.length);\n\n  const itemsOnPage = getNumbers(firstItemOnPage, lastItemOnPage).map(n => `Item ${n}`);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPageValue}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n            }}\n          >\n            {selectValues.map((value: number) => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        PerPage={itemsPerPageValue}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {itemsOnPage.map((item) => (\n          <li data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}